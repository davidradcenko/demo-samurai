{"version":3,"sources":["MyHTML/content_profil/message/message.jsx","MyHTML/content_profil/ProfilStatus/ProfileStatusHook.js","MyHTML/content_profil/profil_users/Prafil_users.jsx","MyHTML/content_profil/content_profil.jsx","MyHTML/content_profil/content_profil_Conteiner.js"],"names":["Message","Props","className","src","alt","text","ProfileStatusHook","props","useState","editMode","setEditMade","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","Profil_users","t","fullName","aboutMe","Profil","React","memo","state","profil","oldMass","message","map","mess","id","newmass","photos","small","facebook","contacts","vk","website","Preloader","MyPostsProfileFormRedux","onSubmit","values","newPost","ProfileTextarea","maxlenth15","maxlengthCreator","reduxForm","form","handleSubmit","Field","name","component","TextAreaComponent","placeholder","validate","requiredField","ProfileContainer","userId","this","match","params","history","push","setFetching","getUserProfile","getStatus","isFetching","Component","compose","connect","profilPage","usersPage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.9ed6d5e2.chunk.js","sourcesContent":["const Message=(Props)=>{\r\nreturn( <div className=\"mess\">\r\n<img src=\"http://wap.photohost.ru/pictures/745260.jpg\" alt=\"img\"/>\r\n<p>{Props.text}</p>\r\n</div> )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport '../content_profil.css'\r\n\r\nconst ProfileStatusHook =(props)=>{\r\n\r\n\r\n\r\nlet [editMode,setEditMade]=useState(false);\r\nlet [status,setStatus]=useState(props.status);\r\n\r\nuseEffect(()=>{\r\n    setStatus(props.status)\r\n},[props.status]); \r\n\r\nconst onStatusChange=(e)=>{\r\nsetStatus(e.currentTarget.value)\r\n}\r\n\r\nconst activateMode=()=>{\r\nsetEditMade(true)\r\n}\r\nconst deactivateEditMode=()=>{\r\n    setEditMade(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\n// let stateWithSetState=useState();\r\n// let editMode =stateWithSetState[0];\r\n// let setEditMode=stateWithSetState[1];\r\n   \r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    <div className=\"\">\r\n                        <span onDoubleClick={activateMode} >{props.status || '------'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div className=\"\">\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}  />\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default ProfileStatusHook;","\r\nconst Profil_users = (props) => {\r\n    return (\r\n        <div className=\"info_user\">\r\n            <img src={props.t} alt=\"foto\" />\r\n            <div className=\"text_info_user\">\r\n                <h1 className=\"title\">{props.fullName}</h1>\r\n                <p className=\"subtitle\">О себе:{props.aboutMe}\r\n                    {/* <br />facebook:{props.facebook.facebook}\r\n                    <br />vk:{props.vk.vk}\r\n                    <br />Web Site:{props.website.website} */}\r\n                </p>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default Profil_users;","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators.js';\r\nimport { TextAreaComponent } from '../common/FormsControls/FormsControls.jsx';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\n\r\n\r\nimport './content_profil.css'\r\nimport Message from './message/message'\r\nimport ProfileStatusHook from './ProfilStatus/ProfileStatusHook.js';\r\n\r\nimport ProfileUsers from './profil_users/Prafil_users'\r\n\r\n\r\n\r\nconst Profil = React.memo(props => {\r\n\r\n    // componentDidUpdate() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({ a: 12 })\r\n    //     }, 3000)\r\n    // }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n\r\n    //let state=props.store.getState().profilPage;\r\n    let state = props.state;\r\n    //let s = React.createRef();\r\n\r\n    // let ONnewPost = () => {\r\n    //     props.newPost();\r\n    // }\r\n\r\n\r\n\r\n    if (!props.profil) {\r\n        <Preloader />\r\n    } else {\r\n        var oldMass = state.message.map(mess => <Message key={mess.id} text={mess.text} />);\r\n        var newmass = <ProfileUsers\r\n            fullName={state.profil.fullName}\r\n            t={state.profil.photos.small}\r\n            aboutMe={state.profil.aboutMe}\r\n            facebook={state.profil.contacts}\r\n            vk={state.profil.contacts} website={state.profil.contacts}\r\n\r\n        />\r\n    }\r\n    let addNewMessPostsProfile = (values) => {\r\n\r\n        props.newPost(values.ProfileTextarea);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content_profil\">\r\n            <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n            {/* <div className=\"profil_img\"></div> */}\r\n            {newmass}\r\n            <div className=\"posts\">\r\n                <h1>My posts</h1>\r\n\r\n            </div>\r\n            <div className=\"message\">\r\n                <MyPostsProfileFormRedux onSubmit={addNewMessPostsProfile} />\r\n                {oldMass}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n})\r\nconst maxlenth15 = maxlengthCreator(15);\r\nconst AddMessageProfilePost = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field name=\"ProfileTextarea\" component={TextAreaComponent} placeholder=\"Enter your post\" validate={[requiredField, maxlenth15]} />\r\n                {/* <textarea onChange={OnChengeFun} value={state.newPostText} ref={s}></textarea> */}\r\n                <button>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst MyPostsProfileFormRedux = reduxForm({ form: \"MypostsProfile\" })(AddMessageProfilePost);\r\nexport default Profil;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\n\r\nimport { newPost,getUserProfile,getStatus,updateStatus } from '../../Redux/ProfilPageReducer.js';\r\nimport {  setFetching } from '../../Redux/UsersPageReducer';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\nimport Profil from './content_profil.jsx';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n\r\n    componentDidMount() {\r\n        let userId=this.props.match.params.userId;\r\n        if(!userId){\r\n         userId=this.props.userId ;\r\n         if(!userId){\r\n             this.props.history.push(\"/login\");\r\n         }\r\n        } \r\n         this.props.setFetching(true);\r\n        this.props.getUserProfile(userId);\r\n         this.props.setFetching(false);\r\n\r\n this.props.getStatus(userId);\r\n\r\n        \r\n    //     this.props.setFetching(true);\r\n    // userAPI.getProfile(userId).then(Response => {\r\n    //         debugger;\r\n    //         this.props.setFetching(false);\r\n    //         this.props.setUserProfile(Response.data);\r\n    //     });\r\n    }\r\n\r\n\r\nrender(){\r\n    \r\n    return  <> {this.props.isFetching ?<Preloader/>:null}\r\n        <Profil  state={this.props.state} \r\n        newPost={this.props.newPost} profil={this.props.profil} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n    </>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        state:state.profilPage,\r\n        profil:state.profilPage.profil,\r\n        isFetching:state.usersPage.isFetching,\r\n        status:state.profilPage.status,\r\n        userId:state.auth.userId,\r\n       isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n// let AuthRedirectComponent=WithAuthRedirect(ProfileContainer);\r\n// let WithUrlDataConteinerComponent=withRouter(AuthRedirectComponent);\r\n// const SuperContent_profil_Conteiner= connect(mapStateToProps,{setFetching,getUserProfile,updateNewPostText,newPost})(WithUrlDataConteinerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{setFetching,getUserProfile,newPost,getStatus,updateStatus}),\r\n    withRouter,\r\n    // WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}