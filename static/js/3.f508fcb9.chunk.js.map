{"version":3,"sources":["MyHTML/Dialogs/CMC/CMC.jsx","MyHTML/Dialogs/Dialogs_Persons/Persons.jsx","MyHTML/Dialogs/Dialogs.jsx","MyHTML/Dialogs/DialogsContainer.js"],"names":["CMC","props","className","src","alt","name","text","Person","Stringid","id","to","maxlenth15","maxlengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextAreaComponent","validate","requiredField","placeholder","Dialogs","state","newpostData","postData","map","s","newUsersData","usersData","Values","ClickButton","newMessageBody","compose","connect","dialogsPage","dispatch","addMessageText"],"mappings":"kQAeeA,EAdH,SAACC,GACT,OAEI,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKC,IAAI,uIACLC,IAAI,UACR,mBAAGF,UAAU,iBAAb,SAA+BD,EAAMI,UAEzC,qBAAKH,UAAU,WAAf,SAA2BD,EAAMK,W,iBCE9BC,G,OATA,SAACN,GACZ,IAAIO,EAAW,YAAcP,EAAMQ,GACnC,OACI,cAAC,IAAD,UACI,8BACI,+BAAI,cAAC,IAAD,CAASC,GAAIF,EAAb,SAAwBP,EAAMI,OAAlC,aCiCVM,EAAaC,YAAiB,KAyB9BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAxBL,SAACb,GASpB,OACI,8BACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOb,KAAK,iBAAiBc,UAAWC,IAAmBC,SAAU,CAACC,IAAeX,GAAaY,YAAY,yBAGlH,8BACI,sGASLC,EAxDC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMwB,MAIdC,EAAcD,EAAME,SAASC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAKxB,KAAMwB,EAAExB,KAAiBC,KAAMuB,EAAEvB,MAAduB,EAAEpB,OAChEqB,EAAeL,EAAMM,UAAUH,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAQxB,KAAMwB,EAAExB,KAAiBI,GAAIoB,EAAEpB,IAAZoB,EAAEpB,OAEzE,OAAQ,sBAAKP,UAAU,aAAf,UACJ,mBAAGA,UAAU,WAAb,sBACA,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,UAAf,SACI,6BACK4B,MAGT,sBAAK5B,UAAU,kBAAf,UACKwB,EACD,qBAAKxB,UAAU,iBAAf,SACI,cAACW,EAAD,CAAqBG,SAjBX,SAACgB,GACvB/B,EAAMgC,YAAYD,EAAOE,+BC4BlBC,sBACXC,aAjBkB,SAACX,GACnB,MAAO,CACHA,MAAOA,EAAMY,gBAII,SAACC,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAeL,SAOrBC,CAGbX","file":"static/js/3.f508fcb9.chunk.js","sourcesContent":["import './CMC.css';\r\nconst CMC = (props) => {\r\n    return (\r\n\r\n        <div className='CMC'>\r\n            <div className='CMC_Foto_name_users'>\r\n                <img src=\"https://img2.freepng.ru/20180423/itq/kisspng-emoticon-smiley-emoji-clip-art-remind-clipart-5add96493aeb00.8147140915244713692413.jpg\"\r\n                    alt=\"Smail\" />\r\n                <p className='CMC_name_users'>{props.name}</p>\r\n            </div>\r\n            <div className='CMC_text'>{props.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CMC;","import { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport './Persons.css';\r\n\r\nconst Person = (props) => {\r\n    let Stringid = \"/Dialogs/\" + props.id;\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <li><NavLink to={Stringid}>{props.name}</NavLink> </li>\r\n            </div>\r\n        </BrowserRouter >);\r\n}\r\nexport default Person;","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators';\r\nimport { TextAreaComponent } from '../common/FormsControls/FormsControls';\r\n\r\nimport CMC from './CMC/CMC';\r\nimport './DialogsCSS.css';\r\nimport Person from './Dialogs_Persons/Persons';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.state;\r\n    let addNewMessageChange = (Values) => {\r\n        props.ClickButton(Values.newMessageBody);\r\n    }\r\n    let newpostData = state.postData.map(s => <CMC name={s.name} key={s.id} text={s.text} />);\r\n    let newUsersData = state.usersData.map(s => <Person name={s.name} key={s.id} id={s.id} />);\r\n\r\n    return (<div className='divDialogs'>\r\n        <p className='NameForm'> Dialogs</p>\r\n        <div className=\"Dialogs\">\r\n            <div className='Persons'>\r\n                <ul>\r\n                    {newUsersData}\r\n                </ul>\r\n            </div>\r\n            <div className='Persons_Dialogs'>\r\n                {newpostData}\r\n                <div className='Message_Dialog'>\r\n                    <AddMessageFormRedux onSubmit={addNewMessageChange} />\r\n                    {/* <textarea onChange={onChangeMessage} value={state.newMessageText} ref={s}></textarea>\r\n                    <button onClick={ClickButton} type='input'>Отправить</button> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nconst maxlenth15 = maxlengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n    // let s = React.createRef();\r\n    // let ClickButton = () => {\r\n    //     props.ClickButton();\r\n    // }\r\n    // let onChangeMessage = () => {\r\n    //     let text = s.current.value;\r\n    //     props.onChangeMessage(text);\r\n    // }\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name=\"newMessageBody\" component={TextAreaComponent} validate={[requiredField, maxlenth15]} placeholder=\"Enter your message\" />\r\n                </div>\r\n                {/* <textarea onChange={onChangeMessage} value={props.newMessageText} ref={s}></textarea> */}\r\n                <div>\r\n                    <button>Отправить</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;","\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { addMessageText } from '../../Redux/dialogPageReducer';\r\n\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>{store => {\r\n//             let ClickButton = () => {\r\n\r\n//                 store.dispatch(addMessageText());\r\n//             }\r\n//             let onChangeMessage = (text) => {\r\n//                 let active = UpdateNewMessageText(text);\r\n//                 store.dispatch(active);\r\n//             }\r\n//             return <Dialogs store={store} ClickButton={ClickButton} onChangeMessage={onChangeMessage} />\r\n//         }}</StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage\r\n       \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        ClickButton: (newMessageBody) => {\r\n            dispatch(addMessageText(newMessageBody));\r\n        }\r\n    }\r\n}\r\n// let AuthRedirectComponent=WithAuthRedirect(Dialogs);\r\n// const SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default SuperDialogsContainer;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n//   WithAuthRedirect  \r\n)(Dialogs)"],"sourceRoot":""}