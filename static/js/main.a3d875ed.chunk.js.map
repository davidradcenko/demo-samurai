{"version":3,"sources":["MyHTML/Users/style.module.css","assets/loading.svg","MyHTML/common/Preloader/Preloader.js","MyHTML/content_navigation/content_navigation.js","API/api.js","Redux/ProfilPageReducer.js","Redux/utils/object-helpers.js","Redux/UsersPageReducer.js","Redux/utils/valedators/valedators.js","MyHTML/common/FormsControls/FormsControls.jsx","MyHTML/content_profil/message/message.jsx","MyHTML/content_profil/ProfilStatus/ProfileStatusHook.js","MyHTML/content_profil/profil_users/Prafil_users.jsx","MyHTML/content_profil/content_profil.jsx","MyHTML/content_profil/content_profil_Conteiner.js","Redux/dialogPageReducer.js","MyHTML/Dialogs/CMC/CMC.jsx","MyHTML/Dialogs/Dialogs_Persons/Persons.jsx","MyHTML/Dialogs/Dialogs.jsx","MyHTML/Dialogs/DialogsContainer.js","Redux/authReduser.js","MyHTML/header/header.js","MyHTML/header/HeaderContainer.js","MyHTML/login/login.jsx","MyHTML/common/paginator/Paginatir.jsx","assets/images/FotoUsersNotFuond.jpg","MyHTML/Users/User.jsx","MyHTML/Users/Users.jsx","Redux/selectors/users_selectors.js","MyHTML/Users/UsersContainer.js","Redux/app-reduser.js","App.js","Redux/Redux-Store.js","index.js","MyHTML/common/FormsControls/FormCssControls.module.css","MyHTML/common/paginator/paginator.module.css","MyHTML/header/headerCSS.module.css"],"names":["module","exports","Preloader","props","style","backgroundColor","alt","src","loading","Navigation","className","to","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","Response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","PROFIL_ADD_NEWPOST","SET_USER_PROFILE","SET_STATUS","f","message","id","text","profil","setStatus","active","type","test","ProfilPageReducer","state","textbody","updateObjectInArray","items","itemId","odjPropName","newodjectProps","map","u","FULLOW","UNFULLOW","SET_USERS_AC","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FRTCHING","TOGGLE_IS_FOLLOW_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fullowSuccess","UserID","unfullowSuccess","setcurrentPage","curentPage","setFetching","FRTCHING","setFollowProgress","Follow","userid","followUnfollowFlow","dispatch","apiMetod","actionCreator","a","resultCode","UsersPageReducer","followed","filter","requiredField","value","maxlengthCreator","maxLength","length","FormControls","input","meta","touched","error","children","hasError","styles","formControl","s","TextAreaComponent","restprops","child","TextInputComponent","createField","placeholder","name","maxlenth15","component","Field","validate","Message","Props","ProfileStatusHook","useState","editMode","setEditMade","useEffect","onDoubleClick","onChange","e","currentTarget","onBlur","autoFocus","Profil_users","t","fullName","aboutMe","Profil","React","memo","oldMass","mess","newmass","photos","small","facebook","contacts","vk","website","MyPostsProfileFormRedux","onSubmit","values","newPost","ProfileTextarea","reduxForm","form","handleSubmit","ProfileContainer","this","match","params","history","push","getUserProfile","Component","compose","connect","profilPage","usersPage","auth","isAuth","newMessage","withRouter","MESSAGE_ADD_NEWMESSAGE","usersData","postData","dialogPageReducer","body","CMC","Person","Stringid","AddMessageFormRedux","Dialogs","newpostData","newUsersData","Values","ClickButton","newMessageBody","dialogsPage","addMessageText","SET_USER_DATA","login","setuserdata","getAuthUserData","authReduser","Headerh","logo","logiBloc","onClick","logout","HeaderConteiner","LoginReduxForm","formSummaryError","messages","stopSubmit","_error","formData","Paginatir","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNamber","setPortionNumber","leftPortionPageNumber","righPortionPageNumber","paginator","p","cn","selectedPage","pageNumber","User","user","FotoUser","userPhoto","disabled","some","Users","getUsersSuperSelector","createSelector","getPageSize_selector","getTotalUsersCount_selector","getCurrentPage_selector","getIsFetching_selector","getFollowingInProgress_selector","UsersConteiner","pageNamber","SuperUsers_Container","bind","totalusersCount","totalCount","SET_INITIALIZED","initialized","appReduser","App","initializeApp","path","render","DialogsContainer","app","promise","Promise","all","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","getState","reactDom","document","getElementById"],"mappings":"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","file":"static/js/main.a3d875ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"style_userPhoto__1LXmn\"};","export default __webpack_public_path__ + \"static/media/loading.b988d774.svg\";","import loading from '../../../assets/loading.svg';\r\nimport React from 'react';\r\n\r\n\r\nlet Preloader=(props)=>{\r\nreturn <div style={{backgroundColor:'white'}}>\r\n            <img alt={\"IMG\"} src={loading} />\r\n         </div>\r\n}\r\nexport default Preloader;","import { NavLink } from 'react-router-dom';\r\nimport './content_navigation.css';\r\nconst Navigation=()=>{\r\n    return(\r\n        <div className=\"content_navigation\">\r\n            <nav className=\"navigation_nav\">\r\n                <NavLink to=\"/Profil\">Profil</NavLink>\r\n                <NavLink to=\"/Dialogs\">Dialogs</NavLink>\r\n                <NavLink to=\"/Users\">Users</NavLink>\r\n                {/* <a >News</a>\r\n                <a >Music</a>\r\n                <a  >Settings</a> */}\r\n            </nav>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Navigation;","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"0d80e3e0-7f08-4f12-bc9d-12cd0ab88669\"\r\n    }\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(Response => {\r\n            return Response.data;\r\n        })\r\n\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId){\r\n        console.warn('Obsolete method. Please ProfileAPI object');\r\n       return  ProfileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const ProfileAPI={\r\n    getProfile(userId){\r\n       return  instance.get(`profile/`+userId)\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/`+userId)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status/`,{status:status}) ;\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me(){\r\n       return  instance.get(`auth/me`,{withCredentials:true})\r\n    },\r\n    login(email,password,rememberMe=false){\r\n       \r\n       return  instance.post(`auth/login`,{email,password,rememberMe})\r\n    },\r\n    logout(email,password,rememberMe=false){\r\n       \r\n       return  instance.delete(`auth/login`);\r\n    }\r\n}","import { ProfileAPI, userAPI } from \"../API/api\";\r\n\r\n\r\nconst PROFIL_ADD_NEWPOST = 'PROFIL_ADD_NEWPOST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\n\r\n\r\nlet f = {\r\n    message: [{\r\n        id: 1,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 4,\r\n        text: 'Hi'\r\n    }\r\n    ],\r\n    profil: null,\r\n    status:\"\"\r\n}\r\n\r\n\r\n\r\nconst ProfilPageReducer = (state = f, active) => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case PROFIL_ADD_NEWPOST:\r\n           \r\n            let textbody = active.text;\r\n            return {\r\n                ...state,\r\n               \r\n                message: [...state.message, { id: 5, text: textbody }]\r\n            };;\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profil: active.test\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: active.test\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const setStatus = (active) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        test: active\r\n    }\r\n};\r\nexport const setUserProfile = (active) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        test: active\r\n    }\r\n};\r\n\r\nexport const newPost = (newMessage) => {\r\n    return {\r\n        type: PROFIL_ADD_NEWPOST,\r\n        text:newMessage\r\n    }\r\n};\r\nexport const getUserProfile=(userId)=>async(dispatch)=>{\r\n     \r\n   let Response=await userAPI.getProfile(userId)\r\n           dispatch(setUserProfile(Response.data));\r\n        \r\n}\r\nexport const getStatus=(userId)=>async(dispatch)=>{\r\n     \r\n    let Response=await ProfileAPI.getStatus(userId)\r\n           dispatch(setStatus(Response.data));\r\n}\r\n\r\nexport const updateStatus=(status)=>async(dispatch)=>{\r\n     \r\n   let Response=await ProfileAPI.updateStatus(status)\r\n    \r\n           if(Response.data.resultCode===0){\r\n           dispatch(setStatus(status));\r\n    }\r\n}\r\nexport default ProfilPageReducer;"," \r\n export const   updateObjectInArray=(items,itemId,odjPropName,newodjectProps)=>{\r\n     \r\n    return items.map(  u =>{\r\n    if(u[odjPropName]===itemId){\r\n    return{ ...u, ...newodjectProps}\r\n    }\r\n    return u;\r\n    } )}","/* eslint eqeqeq: 0 */\r\nimport { userAPI } from \"../API/api\";\r\nimport { updateObjectInArray } from \"./utils/object-helpers\";\r\n\r\n\r\nconst FULLOW = 'FULLOW';\r\nconst UNFULLOW = 'UNFULLOW';\r\nconst SET_USERS_AC = 'SET_USERS_AC';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FRTCHING = 'TOGGLE_IS_FRTCHING';\r\nconst TOGGLE_IS_FOLLOW_PROGRESS='TOGGLE_IS_FOLLOW_PROGRESS';\r\n \r\nlet f = {\r\n   users:[],\r\n   pageSize:10,\r\n   totalUsersCount:0,\r\n   currentPage:4,\r\n   isFetching:false,\r\n   followingInProgress: []\r\n//     users:[{id:1,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:false,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}\r\n// ,{id:2,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:true,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}]\r\n}\r\n\r\n\r\n\r\nconst UsersPageReducer = (state = f, active) => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case FULLOW:\r\n          return{\r\n            ...state,\r\n            users:updateObjectInArray(state.users,active.text,\"id\",{followed:true})\r\n          }\r\n\r\n        case UNFULLOW:\r\n            return{\r\n            ...state,\r\n           users:updateObjectInArray(state.users,active.text,\"id\",{followed:false})\r\n          }\r\n        \r\n          case SET_USERS_AC:\r\n              return{\r\n                  ...state,users:active.text\r\n              }\r\n\r\n\r\n            case SET_CURRENT_PAGE:\r\n              return{\r\n                  ...state,currentPage:active.text \r\n              }\r\n\r\n              case SET_TOTAL_USERS_COUNT:\r\n              return{\r\n                  ...state,totalUsersCount:active.text \r\n              }\r\n              case TOGGLE_IS_FRTCHING:\r\n              return{\r\n                  ...state,isFetching:active.text \r\n              }\r\n              case TOGGLE_IS_FOLLOW_PROGRESS:\r\n                return{\r\n                  ...state,followingInProgress:active.text\r\n                  ?[...state.followingInProgress, active.userid ]\r\n                  :state.followingInProgress.filter(id=>id !=active.userid )\r\n              }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fullowSuccess = (UserID) => {\r\n    return {\r\n        type: FULLOW,\r\n        text:UserID\r\n    }\r\n};\r\nexport const unfullowSuccess = (UserID) => {\r\n    return {\r\n        type: UNFULLOW,\r\n        text: UserID\r\n    }\r\n};\r\nexport const setUsers = (User) => {\r\n    return {\r\n        type: SET_USERS_AC,\r\n        text: User\r\n    }\r\n};\r\nexport const setcurrentPage = (curentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        text: curentPage\r\n    }\r\n};\r\nexport const settotalUsersCount = (totalusersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        text: totalusersCount\r\n    }\r\n};\r\nexport const setFetching = (FRTCHING) => {\r\n    return {\r\n        type: TOGGLE_IS_FRTCHING,\r\n        text: FRTCHING\r\n    }\r\n};\r\nexport const setFollowProgress = (Follow,id) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOW_PROGRESS,\r\n        text: Follow,\r\n        userid:id\r\n    }\r\n};\r\n\r\n\r\nconst followUnfollowFlow=async(dispatch,userId,apiMetod,actionCreator)=>{\r\n      dispatch(setFollowProgress(true, userId));\r\n          let Response=await apiMetod(userId)\r\n\r\n            if (Response.data.resultCode == 0) {\r\n            dispatch(actionCreator(userId));\r\n            }\r\n        dispatch(setFollowProgress(false, userId));\r\n                                \r\n    }\r\n\r\n\r\n export const getUsers=(currentPage,pageSize)=>{\r\n  return async  (dispatch)=>{\r\n           dispatch( setFetching(true));\r\n           dispatch(setcurrentPage(currentPage));\r\n       let data=await userAPI.getUsers(currentPage,pageSize)\r\n           dispatch(setFetching(false)); \r\n            dispatch(setUsers(data.items));\r\n            dispatch(settotalUsersCount(data.totalCount));\r\n    \r\n    }\r\n}\r\n\r\n export const follow=(userId)=>{\r\n   return async (dispatch)=>{\r\n        followUnfollowFlow(dispatch,userId,userAPI.follow.bind(userAPI),fullowSuccess)                         \r\n    }\r\n}\r\n\r\n export const unfollow=(userId)=>{\r\n   return async (dispatch)=>{\r\n        followUnfollowFlow(dispatch,userId,userAPI.unfollow.bind(userAPI),unfullowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default UsersPageReducer;\r\n","export const requiredField=(value)=>{\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\n// export const maxlength30=(value)=>{\r\n//     if(value.length<=30) return \"max length 30\";\r\n//     return undefined\r\n// }\r\n// или использовать замыкание что если нам надо не 30 а 50\r\nexport const maxlengthCreator=(maxLength)=>(value)=>{\r\n    \r\n    if(value.length>maxLength) return `max length is  ${maxLength}} symbols`;\r\n    return undefined\r\n}   ","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormCssControls.module.css\";\r\n\r\n\r\n\r\nconst FormControls = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div >\r\n                {children}\r\n            </div>\r\n            {hasError && < span className={styles.s}>{error}</span>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const TextAreaComponent = (props) => {\r\n    const { input, child, meta, ...restprops } = props;\r\n    return <FormControls {...props}><textarea {...input} {...restprops} /></FormControls>\r\n}\r\n\r\nexport const TextInputComponent = (props) => {\r\n    const { input, child, meta, ...restprops } = props;\r\n    return <FormControls {...props}><input {...input} {...restprops} /></FormControls>\r\n}\r\n\r\nexport const createField = (placeholder, name, requiredField, maxlenth15, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field validate={[requiredField, maxlenth15]} placeholder={placeholder} name={name} component={component}  {...props} />{text}\r\n    </div>\r\n)","const Message=(Props)=>{\r\nreturn( <div className=\"mess\">\r\n<img src=\"http://wap.photohost.ru/pictures/745260.jpg\" alt=\"img\"/>\r\n<p>{Props.text}</p>\r\n</div> )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport '../content_profil.css'\r\n\r\nconst ProfileStatusHook =(props)=>{\r\n\r\n\r\n\r\nlet [editMode,setEditMade]=useState(false);\r\nlet [status,setStatus]=useState(props.status);\r\n\r\nuseEffect(()=>{\r\n    setStatus(props.status)\r\n},[props.status]); \r\n\r\nconst onStatusChange=(e)=>{\r\nsetStatus(e.currentTarget.value)\r\n}\r\n\r\nconst activateMode=()=>{\r\nsetEditMade(true)\r\n}\r\nconst deactivateEditMode=()=>{\r\n    setEditMade(false);\r\n    props.updateStatus(status);\r\n}\r\n\r\n// let stateWithSetState=useState();\r\n// let editMode =stateWithSetState[0];\r\n// let setEditMode=stateWithSetState[1];\r\n   \r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    <div className=\"\">\r\n                        <span onDoubleClick={activateMode} >{props.status || '------'}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div className=\"\">\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}  />\r\n                    </div>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default ProfileStatusHook;","\r\nconst Profil_users = (props) => {\r\n    return (\r\n        <div className=\"info_user\">\r\n            <img src={props.t} alt=\"foto\" />\r\n            <div className=\"text_info_user\">\r\n                <h1 className=\"title\">{props.fullName}</h1>\r\n                <p className=\"subtitle\">О себе:{props.aboutMe}\r\n                    {/* <br />facebook:{props.facebook.facebook}\r\n                    <br />vk:{props.vk.vk}\r\n                    <br />Web Site:{props.website.website} */}\r\n                </p>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\nexport default Profil_users;","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators.js';\r\nimport { TextAreaComponent } from '../common/FormsControls/FormsControls.jsx';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\n\r\n\r\nimport './content_profil.css'\r\nimport Message from './message/message'\r\nimport ProfileStatusHook from './ProfilStatus/ProfileStatusHook.js';\r\n\r\nimport ProfileUsers from './profil_users/Prafil_users'\r\n\r\n\r\n\r\nconst Profil = React.memo(props => {\r\n\r\n    // componentDidUpdate() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({ a: 12 })\r\n    //     }, 3000)\r\n    // }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n\r\n    //let state=props.store.getState().profilPage;\r\n    let state = props.state;\r\n    //let s = React.createRef();\r\n\r\n    // let ONnewPost = () => {\r\n    //     props.newPost();\r\n    // }\r\n\r\n\r\n\r\n    if (!props.profil) {\r\n        <Preloader />\r\n    } else {\r\n        var oldMass = state.message.map(mess => <Message key={mess.id} text={mess.text} />);\r\n        var newmass = <ProfileUsers\r\n            fullName={state.profil.fullName}\r\n            t={state.profil.photos.small}\r\n            aboutMe={state.profil.aboutMe}\r\n            facebook={state.profil.contacts}\r\n            vk={state.profil.contacts} website={state.profil.contacts}\r\n\r\n        />\r\n    }\r\n    let addNewMessPostsProfile = (values) => {\r\n\r\n        props.newPost(values.ProfileTextarea);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content_profil\">\r\n            <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n            {/* <div className=\"profil_img\"></div> */}\r\n            {newmass}\r\n            <div className=\"posts\">\r\n                <h1>My posts</h1>\r\n\r\n            </div>\r\n            <div className=\"message\">\r\n                <MyPostsProfileFormRedux onSubmit={addNewMessPostsProfile} />\r\n                {oldMass}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n})\r\nconst maxlenth15 = maxlengthCreator(15);\r\nconst AddMessageProfilePost = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field name=\"ProfileTextarea\" component={TextAreaComponent} placeholder=\"Enter your post\" validate={[requiredField, maxlenth15]} />\r\n                {/* <textarea onChange={OnChengeFun} value={state.newPostText} ref={s}></textarea> */}\r\n                <button>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst MyPostsProfileFormRedux = reduxForm({ form: \"MypostsProfile\" })(AddMessageProfilePost);\r\nexport default Profil;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\n\r\nimport { newPost,getUserProfile,getStatus,updateStatus } from '../../Redux/ProfilPageReducer.js';\r\nimport {  setFetching } from '../../Redux/UsersPageReducer';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\nimport Profil from './content_profil.jsx';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n\r\n    componentDidMount() {\r\n        let userId=this.props.match.params.userId;\r\n        if(!userId){\r\n         userId=this.props.userId ;\r\n         if(!userId){\r\n             this.props.history.push(\"/login\");\r\n         }\r\n        } \r\n         this.props.setFetching(true);\r\n        this.props.getUserProfile(userId);\r\n         this.props.setFetching(false);\r\n\r\n this.props.getStatus(userId);\r\n\r\n        \r\n    //     this.props.setFetching(true);\r\n    // userAPI.getProfile(userId).then(Response => {\r\n    //         debugger;\r\n    //         this.props.setFetching(false);\r\n    //         this.props.setUserProfile(Response.data);\r\n    //     });\r\n    }\r\n\r\n\r\nrender(){\r\n    \r\n    return  <> {this.props.isFetching ?<Preloader/>:null}\r\n        <Profil  state={this.props.state} \r\n        newPost={this.props.newPost} profil={this.props.profil} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n    </>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        state:state.profilPage,\r\n        profil:state.profilPage.profil,\r\n        isFetching:state.usersPage.isFetching,\r\n        status:state.profilPage.status,\r\n        userId:state.auth.userId,\r\n       isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n// let AuthRedirectComponent=WithAuthRedirect(ProfileContainer);\r\n// let WithUrlDataConteinerComponent=withRouter(AuthRedirectComponent);\r\n// const SuperContent_profil_Conteiner= connect(mapStateToProps,{setFetching,getUserProfile,updateNewPostText,newPost})(WithUrlDataConteinerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{setFetching,getUserProfile,newPost,getStatus,updateStatus}),\r\n    withRouter,\r\n    // WithAuthRedirect\r\n)(ProfileContainer);","const MESSAGE_ADD_NEWMESSAGE = 'MESSAGE_ADD_NEWMESSAGE';\r\n\r\n\r\nlet f = {\r\n    usersData: [{\r\n        id: 1,\r\n        name: 'David'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Selderei'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Grei'\r\n    }\r\n    ],\r\n    postData: [{\r\n        id: 1,\r\n        name: 'David',\r\n        text: \"It if sometimes furnished unwilling as additions so. Blessing resolved peculiar fat graceful ham. Sussex on at really ladies in as elinor. Sir sex opinions age properly extended. Advice branch vanity or do thirty living. Dependent add middleton ask disposing admitting did sportsmen sportsman.\"\r\n    }]\r\n}\r\n\r\n\r\nconst dialogPageReducer = (state = f, active) => {\r\n    switch (active.type) {\r\n        case MESSAGE_ADD_NEWMESSAGE: {\r\n            let body=active.text;\r\n            return {\r\n                ...state,\r\n                \r\n                postData: [...state.postData, { id: 2, name: 'david', text: body }]\r\n            };\r\n        }\r\n      \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addMessageText = (newMessageBody) => {\r\n    return {\r\n        type: MESSAGE_ADD_NEWMESSAGE,\r\n        text:newMessageBody\r\n    }\r\n};\r\n\r\nexport default dialogPageReducer;","import './CMC.css';\r\nconst CMC = (props) => {\r\n    return (\r\n\r\n        <div className='CMC'>\r\n            <div className='CMC_Foto_name_users'>\r\n                <img src=\"https://img2.freepng.ru/20180423/itq/kisspng-emoticon-smiley-emoji-clip-art-remind-clipart-5add96493aeb00.8147140915244713692413.jpg\"\r\n                    alt=\"Smail\" />\r\n                <p className='CMC_name_users'>{props.name}</p>\r\n            </div>\r\n            <div className='CMC_text'>{props.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CMC;","import { BrowserRouter, NavLink } from 'react-router-dom';\r\nimport './Persons.css';\r\n\r\nconst Person = (props) => {\r\n    let Stringid = \"/Dialogs/\" + props.id;\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <li><NavLink to={Stringid}>{props.name}</NavLink> </li>\r\n            </div>\r\n        </BrowserRouter >);\r\n}\r\nexport default Person;","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators';\r\nimport { TextAreaComponent } from '../common/FormsControls/FormsControls';\r\n\r\nimport CMC from './CMC/CMC';\r\nimport './DialogsCSS.css';\r\nimport Person from './Dialogs_Persons/Persons';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.state;\r\n    let addNewMessageChange = (Values) => {\r\n        props.ClickButton(Values.newMessageBody);\r\n    }\r\n    let newpostData = state.postData.map(s => <CMC name={s.name} key={s.id} text={s.text} />);\r\n    let newUsersData = state.usersData.map(s => <Person name={s.name} key={s.id} id={s.id} />);\r\n\r\n    return (<div className='divDialogs'>\r\n        <p className='NameForm'> Dialogs</p>\r\n        <div className=\"Dialogs\">\r\n            <div className='Persons'>\r\n                <ul>\r\n                    {newUsersData}\r\n                </ul>\r\n            </div>\r\n            <div className='Persons_Dialogs'>\r\n                {newpostData}\r\n                <div className='Message_Dialog'>\r\n                    <AddMessageFormRedux onSubmit={addNewMessageChange} />\r\n                    {/* <textarea onChange={onChangeMessage} value={state.newMessageText} ref={s}></textarea>\r\n                    <button onClick={ClickButton} type='input'>Отправить</button> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nconst maxlenth15 = maxlengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n    // let s = React.createRef();\r\n    // let ClickButton = () => {\r\n    //     props.ClickButton();\r\n    // }\r\n    // let onChangeMessage = () => {\r\n    //     let text = s.current.value;\r\n    //     props.onChangeMessage(text);\r\n    // }\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name=\"newMessageBody\" component={TextAreaComponent} validate={[requiredField, maxlenth15]} placeholder=\"Enter your message\" />\r\n                </div>\r\n                {/* <textarea onChange={onChangeMessage} value={props.newMessageText} ref={s}></textarea> */}\r\n                <div>\r\n                    <button>Отправить</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;","\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\n\r\nimport { addMessageText } from '../../Redux/dialogPageReducer';\r\n\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>{store => {\r\n//             let ClickButton = () => {\r\n\r\n//                 store.dispatch(addMessageText());\r\n//             }\r\n//             let onChangeMessage = (text) => {\r\n//                 let active = UpdateNewMessageText(text);\r\n//                 store.dispatch(active);\r\n//             }\r\n//             return <Dialogs store={store} ClickButton={ClickButton} onChangeMessage={onChangeMessage} />\r\n//         }}</StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogsPage\r\n       \r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        ClickButton: (newMessageBody) => {\r\n            dispatch(addMessageText(newMessageBody));\r\n        }\r\n    }\r\n}\r\n// let AuthRedirectComponent=WithAuthRedirect(Dialogs);\r\n// const SuperDialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default SuperDialogsContainer;\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n//   WithAuthRedirect  \r\n)(Dialogs)","\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../API/api\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\n \r\nlet f = {\r\n  userId:null,\r\n   email:null,\r\n   login:null,\r\n   isFetching:false,\r\n   isAuth:false\r\n//     users:[{id:1,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:false,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}\r\n// ,{id:2,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:true,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}]\r\n}\r\n\r\n\r\n\r\nconst authReduser = (state = f, active) => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case SET_USER_DATA:\r\n          return{\r\n            ...state,\r\n            ...active.data\r\n          }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setuserdata = (userId,email,login,isAuth) => {\r\n   \r\n    return {\r\n        type: SET_USER_DATA,\r\n        data:{\r\n            userId,email,login,isAuth\r\n        }\r\n    }\r\n};\r\n\r\nexport const getAuthUserData=()=>async(dispatch)=>{\r\n         let Response= await authAPI.me()            \r\n            if(Response.data.resultCode===0){\r\n                let {id,email,login}=Response.data.data;\r\n                dispatch(setuserdata(id,email,login,true));\r\n            }\r\n        }; \r\n       \r\n\r\n\r\nexport const login=(email,password,rememberMe)=>async(dispatch)=>{\r\n  let Response=await authAPI.login(email,password,rememberMe)\r\n            if(Response.data.resultCode===0){\r\n               dispatch(getAuthUserData());\r\n            }else{\r\n                let message= Response.data.messages.length>0 ? Response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\",{_error:message})); \r\n            }\r\n}\r\n\r\n\r\nexport const logout=()=>(dispatch)=>{\r\n\r\n  return  authAPI.logout().then(Response=>{\r\n          \r\n            if(Response.data.resultCode===0){\r\n             \r\n                dispatch(setuserdata(null,null,null,false));\r\n            }  \r\n            })      \r\n}\r\n\r\nexport default authReduser;\r\n","\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './headerCSS.module.css';\r\n\r\nconst Headerh=(props)=>{\r\n   \r\nreturn (<div>\r\n       <header>\r\n           <div className={s.logo}>\r\n                <img src=\"https://manager.paczkomaty.pl/assets/images/inpost-logo-white.svg\" alt=\"logo\"/>\r\n                <div className={s.logiBloc}>\r\n                    {props.isAuth \r\n                    ? <div> {props.login}-<button onClick={props.logout}>Log out</button></div> \r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                   \r\n                </div>\r\n            </div>\r\n        </header>\r\n       </div>\r\n);\r\n}\r\n\r\nexport default Headerh;","\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport  logout  from '../../Redux/authReduser';\r\nimport Headerh from './header';\r\n\r\n\r\nclass HeaderConteiner extends React.Component {\r\n    \r\n    render(){\r\nreturn <Headerh {...this.props}/>\r\n}\r\n}\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n    }\r\n};\r\n\r\nexport default  connect(mapStateToProps,{logout}) (HeaderConteiner);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../Redux/authReduser';\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators';\r\nimport { createField, TextInputComponent } from '../common/FormsControls/FormsControls';\r\nimport style from \"../common/FormsControls/FormCssControls.module.css\"\r\nconst maxlenth15 = maxlengthCreator(50);\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField(\"email\", \"email\", requiredField, maxlenth15, TextInputComponent)}\r\n            {/* <Field validate={[requiredField, maxlenth15]} placeholder=\"email\" name={\"email\"} component={TextInputComponent} /> */}\r\n            {createField(\"Password\", \"password\", requiredField, maxlenth15, TextInputComponent, { type: \"password\" })}\r\n\r\n            <div>\r\n                remember me!\r\n                <Field validate={[requiredField, maxlenth15]} type={\"Checkbox\"} name={\"rememberMe\"} component={TextInputComponent} />\r\n            </div>\r\n            {error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profil\" />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","import styles from './paginator.module.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginatir = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNamber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNamber - 1) * portionSize + 1;\r\n    let righPortionPageNumber = portionNamber * portionSize;\r\n    debugger;\r\n    return (<div className={styles.paginator}>\r\n        ---\r\n        {portionNamber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNamber - 1) }}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= righPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNamber &&\r\n            <button onClick={() => { setPortionNumber(portionNamber + 1) }}>NEXT</button>}\r\n        ---\r\n    </div>)\r\n\r\n}\r\nexport default Paginatir;","export default __webpack_public_path__ + \"static/media/FotoUsersNotFuond.ba8cdc64.jpg\";","import style from './style.module.css';\r\nimport FotoUser from '../../assets/images/FotoUsersNotFuond.jpg';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nlet User = ({ user, followingInProgress, follow, unfollow }) => {\r\n    let u = user;\r\n    return (\r\n        <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/Profil/' + u.id}>\r\n                        <img alt={\"IMG\"} src={u.photos.small != null ? u.photos.small : FotoUser} className={style.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            unfollow(u.id);\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            follow(u.id);\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    {/* <div>{u.location.country}</div>\r\n                    <div>{u.location.city}</div> */}\r\n                </span>\r\n            </span>\r\n\r\n\r\n\r\n        </div >)\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\n\r\nimport Paginatir from '../common/paginator/Paginatir';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({ currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return < div >\r\n        <Paginatir totalItemsCount={totalItemsCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    key={u.id}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow} />)}\r\n        </div>\r\n    </div >\r\n}\r\nexport default Users;","import { createSelector } from \"reselect\"\r\n\r\n const getUsers_selector=(state)=>{\r\n    return  state.usersPage.users\r\n}\r\n\r\nexport const getUsersSuperSelector=createSelector(getUsers_selector,\r\n    (users)=>{\r\n        return users.filter(u=>true);\r\n    });\r\n\r\n\r\nexport const getPageSize_selector=(state)=>{\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount_selector=(state)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage_selector=(state)=>{\r\n    return state.usersPage.currentPage \r\n}\r\n\r\nexport const getIsFetching_selector=(state)=>{\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress_selector=(state)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { follow, unfollow,setcurrentPage,setFollowProgress,getUsers } from '../../Redux/UsersPageReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nimport {getPageSize_selector, getTotalUsersCount_selector, getCurrentPage_selector, getIsFetching_selector, getFollowingInProgress_selector, getUsersSuperSelector} from '../../Redux/selectors/users_selectors'\r\n\r\n\r\n\r\n\r\nclass UsersConteiner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize}=this.props;\r\n        this.props.getUsers(currentPage,pageSize);\r\n        //  this.props.setFetching(true);\r\n        // userAPI.getUsers(this.props.currentPage,this.props.pageSize).then(data => {\r\n        //     this.props.setFetching(false); \r\n        //     this.props.setUsers(data.items);\r\n        //     this.props.settotalUsersCount(data.totalCount);\r\n        // });\r\n    }\r\n    onPageChanged = (pageNamber) => {\r\n        const {pageSize}=this.props;\r\n        this.props.getUsers(pageNamber,pageSize);\r\n        // this.props.setFetching(true);\r\n        // this.props.setcurrentPage(pageNamber);\r\n        //  userAPI.getUsers(pageNamber,this.props.pageSize).then(data => {\r\n        // this.props.setFetching(false);     \r\n        // this.props.setUsers(data.items);\r\n        // });\r\n    }\r\n    render() {\r\n\r\n        return <>\r\n        {this.props.isFetching ?\r\n         <Preloader/>:null}\r\n         <Users\r\n          \r\n            totalItemsCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n\r\n            unfollow={this.props.unfollow}\r\n            follow={this.props.follow}\r\n            setFollowProgress={this.props.setFollowProgress}\r\n            followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize:state.usersPage.pageSize ,\r\n//         totalUsersCount:state.usersPage.totalUsersCount,\r\n//         currentPage:state.usersPage.currentPage,\r\n//         isFetching:state.usersPage.isFetching,\r\n//         followingInProgress:state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users:   getUsersSuperSelector(state),\r\n        pageSize:getPageSize_selector(state) ,\r\n        totalUsersCount:getTotalUsersCount_selector(state),\r\n        currentPage:getCurrentPage_selector(state),\r\n        isFetching:getIsFetching_selector(state),\r\n        followingInProgress:getFollowingInProgress_selector(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n    \r\n//     return {\r\n//         unfullow: (text) => {\r\n//             dispatch(unfullowAC(text));\r\n//         },\r\n//         fullow: (text) => {\r\n//             dispatch(fullowAC(text));\r\n//         },\r\n//         setUsers: (text) => {\r\n//             dispatch(setUsersAC(text));\r\n//         },\r\n//         setcurrentPage:(pageNumber)=>{\r\n//             dispatch(setCurentpageAC(pageNumber));\r\n//         },\r\n//         settotalUsersCount:(totalCount)=>{\r\n//             dispatch(setUsersTotalCountAC(totalCount));\r\n//         },\r\n//         setFetching:(isFeatching)=>{\r\n//             dispatch(setFetchingAC(isFeatching));\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\nconst SuperUsers_Container = connect(mapStateToProps, \r\n    { follow,unfollow,setcurrentPage,\r\n        setFollowProgress,\r\n   getUsers   }\r\n    \r\n    )(UsersConteiner);\r\nexport default SuperUsers_Container;","\r\nimport { getAuthUserData } from \"./authReduser\";\r\n\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\n \r\nlet f = {\r\n  initialized:false\r\n  }\r\n\r\n\r\n\r\nconst appReduser = (state = f, active) => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case SET_INITIALIZED:\r\n          return{\r\n            ...state,\r\n            initialized:true\r\n          }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setinitializedSuccess= (userId,email,login,isAuth) => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n        }\r\n};\r\n\r\n\r\nexport const initializeApp=()=>(dispatch)=>{\r\n \r\n  let promise=dispatch(getAuthUserData());\r\n\r\nPromise.all([promise]).then(()=>{\r\n dispatch(setinitializedSuccess());\r\n})\r\n}\r\n\r\nexport default appReduser;\r\n","import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport Preloader from './MyHTML/common/Preloader/Preloader.js';\nimport Navigation from './MyHTML/content_navigation/content_navigation.js';\n\nimport Content from './MyHTML/content_profil/content_profil_Conteiner.js';\nimport DialogsContainer from './MyHTML/Dialogs/DialogsContainer.js';\n\nimport HeaderConteiner from './MyHTML/header/HeaderContainer.js';\nimport Login from './MyHTML/login/login.jsx';\nimport './MyHTML/MainCss.css';\nimport SuperUsersContainer from './MyHTML/Users/UsersContainer.js';\nimport { initializeApp } from './Redux/app-reduser.js';\n\n\nclass App extends Component {\n  componentDidMount(){\n       this.props.initializeApp();\n    }\n  render(){\n    if(!this.props.initialized) {return <Preloader/>}\n  \n  \n    return (\n    \n    <div className=\"App\">\n       <div className=\"conteiner\">\n         <HeaderConteiner/>\n         <div className=\"content\">\n           <Navigation/>\n           \n          <Route path=\"/Profil/:userId?\"  render={()=><Content /> }/>\n          <Route path=\"/Dialogs\" render={()=><DialogsContainer  />}/>\n           <Route path=\"/Users\" render={()=><SuperUsersContainer  />}/>\n            <Route path=\"/login\" render={()=><Login  />}/>\n\n         \n         </div>\n       </div>\n    </div>\n    \n  );\n}}\n\nconst mapStateToProps=(state)=>({\ninitialized: state.app.initialized\n})\n\nexport default compose( \n  withRouter,\n  connect(mapStateToProps,{initializeApp}))(App);\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReduser from \"./authReduser\";\r\nimport dialogPageReducer from \"./dialogPageReducer\";\r\nimport ProfilPageReducer from \"./ProfilPageReducer\";\r\nimport UsersPageReducer from \"./UsersPageReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReduser from \"./app-reduser\";\r\n\r\n\r\n\r\n\r\nlet reducers=combineReducers({\r\n   profilPage:ProfilPageReducer,\r\n   dialogsPage:dialogPageReducer,\r\n   usersPage:UsersPageReducer,\r\n   auth:authReduser,\r\n   form:formReducer,\r\n   app:appReduser\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)));\r\n\r\n //let store=createStore(reducers,applyMiddleware(thunkMiddleware));\r\n export default store;","\nimport reactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n import store from './Redux/Redux-Store';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nlet rerenderEntireTree=()=>{\nreactDom.render(\n    <BrowserRouter>\n    <Provider store={store}>\n          <App />\n    </Provider> \n    </BrowserRouter>\n    , document.getElementById('root')\n\n);\n}\nwindow.store=store;\nrerenderEntireTree(store.getState());\n// store.subscribe(()=>{\n//     let state=store.getState();\n// rerenderEntireTree(state)\n// });\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormCssControls_formControl__3SU9v\",\"error\":\"FormCssControls_error__3nFL_\",\"s\":\"FormCssControls_s__OYLug\",\"formSummaryError\":\"FormCssControls_formSummaryError__1Rezj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"paginator_pageNumber__1GwUf\",\"selectedPage\":\"paginator_selectedPage__1dyns\",\"paginator\":\"paginator_paginator__3iI5f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"headerCSS_logo__KAaCg\",\"logiBloc\":\"headerCSS_logiBloc__3axNK\"};"],"sourceRoot":""}