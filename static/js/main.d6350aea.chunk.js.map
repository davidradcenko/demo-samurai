{"version":3,"sources":["API/api.ts","Redux/dialogPageReducer.ts","Redux/ProfilPageReducer.ts","assets/images/FotoUsersNotFuond.jpg","MyHTML/Users/style.module.css","MyHTML/common/FormsControls/FormsControls.tsx","MyHTML/content_navigation/content_navigation.js","Redux/authReduser.ts","MyHTML/header/header.js","MyHTML/header/HeaderContainer.js","MyHTML/login/login.tsx","Redux/app-reduser.ts","Redux/Redux-Store.ts","MyHTML/common/paginator/Paginatir.tsx","MyHTML/Users/User.jsx","MyHTML/Users/Users.tsx","Redux/selectors/users_selectors.ts","MyHTML/Users/UsersContainer.tsx","hoc/WithSuspens.js","App.js","index.js","Redux/utils/valedators/valedators.ts","MyHTML/common/FormsControls/FormCssControls.module.css","Redux/utils/object-helpers.js","Redux/UsersPageReducer.ts","assets/loading.svg","MyHTML/common/Preloader/Preloader.js","MyHTML/common/paginator/paginator.module.css","MyHTML/header/headerCSS.module.css"],"names":["ResultCodesEnam","ResultCodesForCapctha","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","Response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","ProfileAPI","getStatus","updateStatus","status","put","saveProfile","profile","saveFoto","file","fotmData","FormData","append","authAPI","me","res","login","email","password","rememberMe","captcha","logout","securityAPI","grtCapchaURL","MESSAGE_ADD_NEWMESSAGE","f","usersData","id","name","postData","text","addMessageText","newMessageBody","type","dialogPageReducer","state","active","body","PROFIL_ADD_NEWPOST","SET_USER_PROFILE","SET_STATUS","SAVE_FOTO","message","profil","setStatus","test","newPost","newMessage","getUserProfile","dispatch","a","resultCode","foto","photos","getState","userrId","auth","stopSubmit","_error","messages","Promise","reject","ProfilPageReducer","textbody","module","exports","FormControls","meta","touched","error","children","hasError","className","styles","formControl","s","TextAreaComponent","props","input","restprops","TextInputComponent","createField","placeholder","validate","component","Navigation","to","SET_USER_DATA","GET_CAPTCH_URL","isAuth","isFetching","capthaUrl","setuserdata","getAuthUserData","meData","Success","getCapthaURL","captchaUrl","url","capthaUurlrl","authReduser","action","usewegwgwhrrid","Headerh","logo","src","alt","logiBloc","onClick","logoutAcchen","HeaderConteiner","this","React","Component","connect","maxlenth20","maxlengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","requiredField","Field","style","formSummaryError","capthUrl","Data","CaptchaIsRequired","log","length","formData","SET_INITIALIZED","initialized","appReduser","reducers","combineReducers","profilPage","dialogsPage","usersPage","UsersPageReducer","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Paginatir","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNamber","setPortionNumber","leftPortionPageNumber","righPortionPageNumber","paginator","filter","p","map","cn","selectedPage","pageNumber","e","User","user","followingInProgress","u","small","FotoUser","userPhoto","followed","disabled","some","Users","users","getUsersSuperSelector","createSelector","getPageSize_selector","getTotalUsersCount_selector","totalUsersCount","getCurrentPage_selector","getIsFetching_selector","getFollowingInProgress_selector","UsersConteiner","pageNamber","pageTitl","Preloader","WithSuspens","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","cathAllhandelErrors","PromiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","pageTitle","AppContainer","withRouter","promise","all","SamuraiJSPApp","reactDom","document","getElementById","value","maxLength","updateObjectInArray","items","itemId","odjPropName","newodjectProps","FULLOW","UNFULLOW","SET_USERS_AC","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FRTCHING","TOGGLE_IS_FOLLOW_PROGRESS","fullowSuccess","UserID","unfullowSuccess","setFetching","FRTCHING","setFollowProgress","Follow","userid","followUnfollowFlow","apiMetod","actionCreator","totalusersCount","totalCount","bind","backgroundColor","loading"],"mappings":"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","file":"static/js/main.d6350aea.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { profilType } from \"../Types/Types\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"0d80e3e0-7f08-4f12-bc9d-12cd0ab88669\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnam {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\nexport enum ResultCodesForCapctha {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(Response => {\r\n            return Response.data;\r\n        })\r\n\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method. Please ProfileAPI object');\r\n        return ProfileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    },\r\n    saveProfile(profile: profilType) {\r\n        return instance.put(`profile/`, profile);\r\n    },\r\n    saveFoto(file: any) {\r\n        const fotmData = new FormData();\r\n        fotmData.append(\"image\", file)\r\n        return instance.put(`profile/photo`, fotmData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\ntype MeResponseTypes = {\r\n    data: { id: number, email: string, login: string }\r\n    resultCode: ResultCodesEnam\r\n    messages: Array<string>\r\n}\r\ntype LoginResponseType = {\r\n    data: { userId: number }\r\n    resultCode: ResultCodesForCapctha | ResultCodesEnam\r\n    messages: Array<string>\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<MeResponseTypes>(`auth/me`, { withCredentials: true }).then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean = false, captcha: null | string = null) {\r\n\r\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha }).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\nexport const securityAPI = {\r\n    grtCapchaURL() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}","const MESSAGE_ADD_NEWMESSAGE = 'MESSAGE_ADD_NEWMESSAGE';\r\n\r\ntype usersDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype postDataType = {\r\n    id: number\r\n    name: string\r\n    text: string\r\n}\r\nlet f = {\r\n    usersData: [{\r\n        id: 1,\r\n        name: 'David'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Selderei'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Grei'\r\n    }\r\n    ] as Array<usersDataType>,\r\n    postData: [{\r\n        id: 1,\r\n        name: 'David',\r\n        text: \"It if sometimes furnished unwilling as additions so. Blessing resolved peculiar fat graceful ham. Sussex on at really ladies in as elinor. Sir sex opinions age properly extended. Advice branch vanity or do thirty living. Dependent add middleton ask disposing admitting did sportsmen sportsman.\"\r\n    }] as Array<postDataType>\r\n}\r\nexport type InitialStateType = typeof f\r\n\r\nconst dialogPageReducer = (state = f, active: any): InitialStateType => {\r\n    switch (active.type) {\r\n        case MESSAGE_ADD_NEWMESSAGE: {\r\n            let body = active.text;\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, { id: 2, name: 'david', text: body }]\r\n            };\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\ntype addMessageTextType = {\r\n    type: typeof MESSAGE_ADD_NEWMESSAGE\r\n    text: string\r\n}\r\nexport const addMessageText = (newMessageBody: string): addMessageTextType => {\r\n    return {\r\n        type: MESSAGE_ADD_NEWMESSAGE,\r\n        text: newMessageBody\r\n    }\r\n};\r\n\r\nexport default dialogPageReducer;","import { messageType, profilType, photosType } from './../Types/Types';\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { ProfileAPI, userAPI } from \"../API/api\";\r\n\r\n\r\nconst PROFIL_ADD_NEWPOST = 'PROFIL_ADD_NEWPOST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_FOTO = 'SAVE_FOTO';\r\n\r\n\r\nlet f = {\r\n    message: [{\r\n        id: 1,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 2,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Hi'\r\n    },\r\n    {\r\n        id: 4,\r\n        text: 'Hi'\r\n    }\r\n    ] as Array<messageType>,\r\n    profil: null as profilType | null,\r\n    status: \"\"\r\n}\r\nexport type InitialStateType = typeof f\r\n\r\n\r\nconst ProfilPageReducer = (state = f, active: any): InitialStateType => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case PROFIL_ADD_NEWPOST:\r\n\r\n            let textbody = active.text;\r\n            return {\r\n                ...state,\r\n\r\n                message: [...state.message, { id: 5, text: textbody }]\r\n            };;\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profil: active.test\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: active.test\r\n            };\r\n        case SAVE_FOTO:\r\n            return {\r\n                ...state,\r\n                profil: { ...state.profil, photos: active.foto } as profilType\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\ntype setStatusType = {\r\n    type: typeof SET_STATUS\r\n    test: string\r\n}\r\nexport const setStatus = (active: string): setStatusType => {\r\n    return {\r\n        type: SET_STATUS,\r\n        test: active\r\n    }\r\n};\r\ntype setUserProfileType = {\r\n    type: typeof SET_USER_PROFILE\r\n    test: profilType\r\n}\r\nexport const setUserProfile = (active: profilType): setUserProfileType => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        test: active\r\n    }\r\n};\r\ntype newPostType = {\r\n    type: typeof PROFIL_ADD_NEWPOST\r\n    text: string\r\n}\r\nexport const newPost = (newMessage: string): newPostType => {\r\n    return {\r\n        type: PROFIL_ADD_NEWPOST,\r\n        text: newMessage\r\n    }\r\n};\r\ntype saveFotoSuccessType = {\r\n    type: typeof SAVE_FOTO\r\n    foto: photosType\r\n}\r\nexport const saveFotoSuccess = (foto: photosType): saveFotoSuccessType => ({ type: SAVE_FOTO, foto })\r\n\r\n\r\n\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n\r\n    let Response = await userAPI.getProfile(userId)\r\n    dispatch(setUserProfile(Response.data));\r\n\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n\r\n    let Response = await ProfileAPI.getStatus(userId)\r\n    dispatch(setStatus(Response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n\r\n    let Response = await ProfileAPI.updateStatus(status)\r\n\r\n    if (Response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\n\r\nexport const saveFoto = (file: any) => async (dispatch: any) => {\r\n    let Response = await ProfileAPI.saveFoto(file)\r\n    if (Response.data.resultCode === 0) {\r\n        dispatch(saveFotoSuccess(Response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: profilType) => async (dispatch: any, getState: any) => {\r\n    const userrId = getState().auth.userId;\r\n    const Response = await ProfileAPI.saveProfile(profile)\r\n    debugger;\r\n    if (Response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userrId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: Response.data.messages[0] }))\r\n        return Promise.reject(Response.data.messages[0]);\r\n        // способ отображения ошибки в input\r\n        // dispatch(stopSubmit(\"edit-profile\",{\"contacts\": { \"facebook\": Response.data.messages[0]}}))\r\n    }\r\n}\r\n\r\nexport default ProfilPageReducer;","export default __webpack_public_path__ + \"static/media/FotoUsersNotFuond.ba8cdc64.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"style_userPhoto__3uhkf\"};","import React from \"react\";\r\nimport { Field, WrappedFieldInputProps, WrappedFieldMetaProps, WrappedFieldProps, WrappedFieldsProps } from \"redux-form\";\r\nimport { FieldValidatorType } from \"../../../Redux/utils/valedators/valedators\";\r\nimport styles from \"./FormCssControls.module.css\";\r\n\r\ntype FormControlsPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n\r\n}\r\n\r\n\r\nconst FormControls: React.FC<FormControlsPropsType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div >\r\n                {children}\r\n            </div>\r\n            {hasError && < span className={styles.s}>{error}</span>}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport const TextAreaComponent: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...restprops } = props;\r\n    return <FormControls {...props}><textarea {...input} {...restprops} /></FormControls>\r\n}\r\n\r\nexport const TextInputComponent: React.FC<WrappedFieldProps> = (props) => {\r\n    const { input, meta, ...restprops } = props;\r\n    return <FormControls {...props}><input {...input} {...restprops} /></FormControls>\r\n}\r\n\r\n// export const createField = (placeholder, name, requiredField, maxlenth15, component, props = {}, text = \"\") => (\r\n//     <div>\r\n//         <Field validate={[requiredField, maxlenth15]} placeholder={placeholder} name={name} component={component}  {...props} />{text}\r\n//     </div>\r\n// )\r\n\r\n\r\n\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n    name: FormKeysType,\r\n    validate: Array<FieldValidatorType>,\r\n    component: React.FC<WrappedFieldProps>,\r\n    props = {}, text = \"\") {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} validate={validate} name={name} component={component}  {...props} />{text}\r\n        </div>\r\n    )\r\n}","import { NavLink } from 'react-router-dom';\r\nimport './content_navigation.css';\r\nconst Navigation=()=>{\r\n    return(\r\n        <div className=\"content_navigation\">\r\n            <nav className=\"navigation_nav\">\r\n                <NavLink to=\"/Profil\">Profil</NavLink>\r\n                <NavLink to=\"/Dialogs\">Dialogs</NavLink>\r\n                <NavLink to=\"/Users\">Users</NavLink>\r\n                {/* <a >News</a>\r\n                <a >Music</a>\r\n                <a  >Settings</a> */}\r\n            </nav>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Navigation;","import { ResultCodesForCapctha } from './../API/api';\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nimport { authAPI, ResultCodesEnam, securityAPI } from \"../API/api\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst GET_CAPTCH_URL = 'GET_CAPTCH_URL';\r\n\r\ntype InitialStateType2 = {\r\n  userId: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n  isFetching: boolean\r\n  capthaUrl: string | null\r\n}\r\n\r\nlet f = {\r\n  userId: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isAuth: false,\r\n  isFetching: false,\r\n  capthaUrl: null as string | null\r\n\r\n  //     users:[{id:1,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:false,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}\r\n  // ,{id:2,userFoto:\"https://cdn-1.vedomosti.ru/image/2017/39/12lbki/retina_big-1e0k.jpg\",followed:true,fullName:\"David\",status:\"I am a boss\",location:{city:\"Minsk\",country:\"Belarus\"}}]\r\n}\r\n\r\n//export type InitialStateType = typeof f\r\n\r\n\r\nconst authReduser = (state = f, action: any): InitialStateType2 => {\r\n\r\n\r\n  switch (action.type) {\r\n\r\n    case SET_USER_DATA:\r\n\r\n      return {\r\n        usewegwgwhrrid: '11111',\r\n        ...state,\r\n        ...action.data\r\n      }\r\n    case GET_CAPTCH_URL:\r\n      return {\r\n        ...state,\r\n        capthaUrl: action.data\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\ntype setuserdataActionDataType = {\r\n  userId: number | null\r\n  email: string | null\r\n  login: string | null\r\n  isAuth: boolean\r\n}\r\ntype setuserdataActionType = {\r\n  type: typeof SET_USER_DATA\r\n  data: setuserdataActionDataType\r\n}\r\n\r\nexport const setuserdata = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setuserdataActionType => ({ type: SET_USER_DATA, data: { userId, email, login, isAuth } });\r\n\r\n\r\ntype setCapthaActionType = {\r\n  type: typeof GET_CAPTCH_URL\r\n  data: { capthaUurlrl: string }\r\n}\r\nexport const setCaptha = (capthaUurlrl: string): setCapthaActionType => ({ type: GET_CAPTCH_URL, data: { capthaUurlrl } });\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n  let meData = await authAPI.me()\r\n  if (meData.resultCode === ResultCodesEnam.Success) {\r\n    let { id, email, login } = meData.data;\r\n    dispatch(setuserdata(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, capthUrl: any) => async (dispatch: any) => {\r\n\r\n  let Data = await authAPI.login(email, password, rememberMe, capthUrl)\r\n  debugger;\r\n  if (Data.resultCode === ResultCodesEnam.Success) {\r\n    dispatch(getAuthUserData());\r\n  } else {\r\n    if (Data.resultCode === ResultCodesForCapctha.CaptchaIsRequired) {\r\n      debugger;\r\n      console.log(\"------------------\");\r\n      dispatch(getCapthaURL());\r\n    }\r\n    let message = Data.messages.length > 0 ? Data.messages[0] : \"Some error1\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n}\r\n\r\n\r\nexport const logoutAcchen = () => async (dispatch: any) => {\r\n\r\n  let Response = await authAPI.logout()\r\n  if (Response.data.resultCode === 0) {\r\n    dispatch(setuserdata(null, null, null, false));\r\n  }\r\n}\r\n\r\nexport const getCapthaURL = () => async (dispatch: any) => {\r\n  debugger;\r\n  const Response = await securityAPI.grtCapchaURL();\r\n  const captchaUrl = Response.data.url;\r\n  debugger;\r\n  dispatch(setCaptha(captchaUrl));\r\n\r\n}\r\nexport default authReduser;\r\n","\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './headerCSS.module.css';\r\n\r\nconst Headerh=(props)=>{\r\n   debugger;\r\n   const onSubmit = () => {\r\n        props.logoutAcchen();\r\n    }\r\nreturn (<div>\r\n       <header>\r\n           <div className={s.logo}>\r\n                <img src=\"https://manager.paczkomaty.pl/assets/images/inpost-logo-white.svg\" alt=\"logo\"/>\r\n                <div className={s.logiBloc}>\r\n                    {props.isAuth \r\n                    ? <div> {props.login}<button onClick={props.logoutAcchen}>Log out</button></div> \r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n                   \r\n                </div>\r\n            </div>\r\n        </header>\r\n       </div>\r\n);\r\n}\r\n\r\nexport default Headerh;","\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport   { logoutAcchen }  from '../../Redux/authReduser';\r\nimport Headerh from './header';\r\n\r\n\r\nclass HeaderConteiner extends React.Component {\r\n    debugger;\r\n    render(){\r\nreturn <Headerh \r\nisAuth={this.props.isAuth}\r\nlogin={this.props.login}\r\nlogoutAcchen={this.props.logoutAcchen}\r\n/>\r\n}\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n    }\r\n};\r\nexport default  connect(mapStateToProps,{logoutAcchen}) (HeaderConteiner);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { login } from '../../Redux/authReduser';\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators';\r\nimport { createField, TextInputComponent } from '../common/FormsControls/FormsControls';\r\nimport style from \"../common/FormsControls/FormCssControls.module.css\"\r\nimport { AppStateType } from '../../Redux/Redux-Store';\r\nconst maxlenth20 = maxlengthCreator(25);\r\n\r\ntype LoginFromOwnProps = {\r\n    capthaUrl: any\r\n}\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValueType, LoginFromOwnProps> & LoginFromOwnProps> = ({ handleSubmit, error, capthaUrl }) => {\r\n    debugger;\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValueTypeKeys>(\"email\", \"email\", [requiredField, maxlenth20], TextInputComponent)}\r\n            {createField<LoginFormValueTypeKeys>(\"Password\", \"password\", [requiredField, maxlenth20], TextInputComponent, { type: \"password\" })}\r\n            <div>\r\n                remember me!\r\n                <Field validate={[requiredField, maxlenth20]} type={\"Checkbox\"} name={\"rememberMe\"} component={TextInputComponent} />\r\n            </div>\r\n            {capthaUrl && <img src={capthaUrl.capthaUurlrl} />}\r\n            {capthaUrl && createField<LoginFormValueTypeKeys>(\"Symbols from image\", \"capthaUrl\", [requiredField], TextInputComponent, {})}\r\n            {error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm<LoginFormValueType, LoginFromOwnProps>({ form: 'login' })(LoginForm)\r\n\r\ntype MapStatePropsType = {\r\n    capthaUrl: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, capthUrl: any) => void\r\n}\r\n\r\n\r\ntype LoginFormValueType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    capthaUrl: string\r\n}\r\n\r\ntype LoginFormValueTypeKeys = Extract<keyof LoginFormValueType, string>\r\n\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n    const onSubmit = (formData: LoginFormValueType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.capthaUrl);\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profil\" />\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm capthaUrl={props.capthaUrl} onSubmit={onSubmit} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    capthaUrl: state.auth.capthaUrl\r\n})\r\nexport default connect(mapStateToProps, { login })(Login);","\r\nimport { getAuthUserData } from \"./authReduser\";\r\n\r\n\r\nconst SET_INITIALIZED = 'SET_INITIALIZED';\r\n\r\n\r\n\r\ntype InitializeStateType = {\r\n  initialized: boolean\r\n}\r\n\r\nlet f: InitializeStateType = {\r\n  initialized: false\r\n}\r\n\r\n\r\n\r\nconst appReduser = (state = f, active: any): InitializeStateType => {\r\n\r\n\r\n  switch (active.type) {\r\n\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\ntype InitialazinSuccessActiveType = {\r\n  type: typeof SET_INITIALIZED\r\n}\r\n\r\nexport const setinitializedSuccess = (): InitialazinSuccessActiveType => ({ type: SET_INITIALIZED });\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(setinitializedSuccess());\r\n  })\r\n}\r\n\r\nexport default appReduser;\r\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReduser from \"./authReduser\";\r\nimport dialogPageReducer from \"./dialogPageReducer\";\r\nimport ProfilPageReducer from \"./ProfilPageReducer\";\r\nimport UsersPageReducer from \"./UsersPageReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReduser from \"./app-reduser\";\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n   profilPage: ProfilPageReducer,\r\n   dialogsPage: dialogPageReducer,\r\n   usersPage: UsersPageReducer,\r\n   auth: authReduser,\r\n   form: formReducer,\r\n   app: appReduser\r\n});\r\n\r\ntype reducersType = typeof reducers\r\nexport type AppStateType = ReturnType<reducersType>\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import styles from './paginator.module.css';\r\n\r\nimport React, { useState } from 'react';\r\nimport cn from \"classnames\";\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pages: number) => void\r\n    portionSize?: number\r\n}\r\nlet Paginatir: React.FC<PropsType> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNamber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNamber - 1) * portionSize + 1;\r\n    let righPortionPageNumber = portionNamber * portionSize;\r\n    debugger;\r\n    return (<div className={styles.paginator}>\r\n        ---\r\n        {portionNamber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNamber - 1) }}>PREV</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= righPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNamber &&\r\n            <button onClick={() => { setPortionNumber(portionNamber + 1) }}>NEXT</button>}\r\n        ---\r\n    </div>)\r\n\r\n}\r\nexport default Paginatir;","import style from './style.module.css';\r\nimport FotoUser from '../../assets/images/FotoUsersNotFuond.jpg';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nlet User = ({ user, followingInProgress, follow, unfollow }) => {\r\n    let u = user;\r\n    return (\r\n        <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/Profil/' + u.id}>\r\n                        <img alt={\"IMG\"} src={u.photos.small != null ? u.photos.small : FotoUser} className={style.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            unfollow(u.id);\r\n\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            follow(u.id);\r\n\r\n                        }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    {/* <div>{u.location.country}</div>\r\n                    <div>{u.location.city}</div> */}\r\n                </span>\r\n            </span>\r\n\r\n\r\n\r\n        </div >)\r\n}\r\n\r\nexport default User;","\r\nimport React from 'react';\r\nimport { userType } from '../../Types/Types';\r\n\r\nimport Paginatir from '../common/paginator/Paginatir';\r\nimport User from './User';\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pages: number) => void\r\n    users: Array<userType>\r\n    followingInProgress: Array<number>\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet Users: React.FC<PropsType> = ({ currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props }) => {\r\n    return < div >\r\n        <Paginatir totalItemsCount={totalItemsCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    followingInProgress={props.followingInProgress}\r\n                    key={u.id}\r\n                    unfollow={props.unfollow}\r\n                    follow={props.follow} />)}\r\n        </div>\r\n    </div >\r\n}\r\nexport default Users;","import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"../Redux-Store\";\r\n\r\nconst getUsers_selector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsers_selector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    });\r\n\r\n\r\nexport const getPageSize_selector = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount_selector = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage_selector = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching_selector = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress_selector = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import { compose } from 'redux';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { follow, unfollow, setcurrentPage, setFollowProgress, getUsers } from '../../Redux/UsersPageReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nimport { getPageSize_selector, getTotalUsersCount_selector, getCurrentPage_selector, getIsFetching_selector, getFollowingInProgress_selector, getUsersSuperSelector } from '../../Redux/selectors/users_selectors'\r\nimport { userType } from '../../Types/Types';\r\nimport { AppStateType } from '../../Redux/Redux-Store';\r\n\r\ntype MapPropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<userType>\r\n    followingInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    pageTitl: string\r\n}\r\n\r\n\r\n\r\ntype PropsType = MapPropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass UsersConteiner extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        const { currentPage, pageSize } = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n    onPageChanged = (pageNamber: number) => {\r\n        const { pageSize } = this.props;\r\n        this.props.getUsers(pageNamber, pageSize);\r\n    }\r\n    render() {\r\n        return <>\r\n            <h2>{this.props.pageTitl}</h2>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n\r\n            < Users totalItemsCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingInProgress={this.props.followingInProgress} />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapPropsType => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize_selector(state),\r\n        totalUsersCount: getTotalUsersCount_selector(state),\r\n        currentPage: getCurrentPage_selector(state),\r\n        isFetching: getIsFetching_selector(state),\r\n        followingInProgress: getFollowingInProgress_selector(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect<MapPropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps,\r\n        { follow, unfollow, getUsers })\r\n)(UsersConteiner);\r\n\r\n// const SuperUsers_Container = connect(mapStateToProps,\r\n//     {\r\n//         follow, unfollow, setcurrentPage,\r\n//         setFollowProgress,\r\n//         getUsers\r\n//     }\r\n// )(UsersConteiner);\r\n//export default SuperUsers_Container;","import { Component } from \"react\";\r\nimport React from 'react';\r\nexport const WithSuspens=(Component)=>{\r\n    return (props)=>{\r\nreturn <React.Suspense fallback={<div>Loading...</div>}> \r\n            <Component  {...props}/>\r\n         </React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter, Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from './MyHTML/common/Preloader/Preloader.js';\r\nimport Navigation from './MyHTML/content_navigation/content_navigation.js';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport HeaderConteiner from './MyHTML/header/HeaderContainer.js';\r\nimport Login from './MyHTML/login/login.tsx';\r\nimport './MyHTML/MainCss.css';\r\nimport store from './Redux/Redux-Store';\r\nimport SuperUsersContainer from './MyHTML/Users/UsersContainer.tsx';\r\nimport { initializeApp } from './Redux/app-reduser.ts';\r\nimport { WithSuspens } from './hoc/WithSuspens.js';\r\n//\r\n\r\n\r\n//import DialogsContainer from './MyHTML/Dialogs/DialogsContainer.js';\r\nconst DialogsContainer=React.lazy(()=>import('./MyHTML/Dialogs/DialogsContainer.js'))\r\n//import Content from './MyHTML/content_profil/content_profil_Conteiner.js';\r\nconst ProfileContainer=React.lazy(()=>import('./MyHTML/content_profil/content_profil_Conteiner.js'))\r\n\r\n\r\nclass App extends Component {\r\n  cathAllhandelErrors = (PromiseRejectionEvent)=>{\r\n    alert(\"Some error occured\")\r\n    //console.error(PromiseRejectionEvent)\r\n  }\r\n  componentDidMount(){\r\n       this.props.initializeApp();\r\n       window.addEventListener(\"unhandledrejection\",this.cathAllhandelErrors);\r\n    }\r\n  componentWillUnmount(){\r\n    window.removeEventListener(\"unhandledrejection\",this.cathAllhandelErrors);\r\n  }\r\n\r\n  render(){\r\n    if(!this.props.initialized) {return <Preloader/>}\r\n  \r\n  \r\n    return (\r\n    \r\n    <div className=\"App\">\r\n       <div className=\"conteiner\">\r\n         <HeaderConteiner/>\r\n         <div className=\"content\">\r\n           <Navigation/>\r\n           <Switch>\r\n            <Route exact path=\"/\"  render={() => <Redirect to={\"/Profil\"}/>  }/>\r\n            <Route path=\"/Profil/:userId?\"  render={ WithSuspens(ProfileContainer)}/>\r\n            <Route path=\"/Dialogs\" render={ WithSuspens(DialogsContainer)}/>\r\n            <Route path=\"/Users\" render={()=><SuperUsersContainer  pageTitle={\"Самурай\"} />}/>\r\n            <Route path=\"/login\" render={()=><Login  />}/>\r\n            <Route path=\"*\" render={()=><div>404 Not FOUND</div>}/>\r\n          </Switch>\r\n         \r\n         </div>\r\n       </div>\r\n    </div>\r\n    \r\n  );\r\n}}\r\n\r\nconst mapStateToProps=(state)=>({\r\ninitialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer= compose( \r\n  withRouter,\r\n  connect(mapStateToProps,{initializeApp}))(App);\r\n\r\n\r\n  const SamuraiJSPApp=(props)=>{\r\n     return  <BrowserRouter>\r\n      <Provider store={store}>\r\n            <AppContainer />\r\n      </Provider> \r\n     </BrowserRouter>\r\n   }\r\n\r\n   export default SamuraiJSPApp;","\r\nimport reactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\n import store from './Redux/Redux-Store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport SamuraiJSPApp from './App';\r\n\r\n\r\n// let rerenderEntireTree=()=>{\r\n// reactDom.render(\r\n//     <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n//     <Provider store={store}>\r\n//           <App />\r\n//     </Provider> \r\n//     </BrowserRouter>\r\n//     , document.getElementById('root')\r\n\r\n// );\r\n// }\r\n\r\n\r\n\r\n reactDom.render(\r\n    <SamuraiJSPApp/>\r\n    , document.getElementById('root'));\r\n\r\n    window.store=store;\r\n//rerenderEntireTree(store.getState());\r\n","export type FieldValidatorType = (value: string) => string | undefined\r\nexport const requiredField: FieldValidatorType = (value: string): string | undefined => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\n\r\n// export const maxlength30=(value)=>{\r\n//     if(value.length<=30) return \"max length 30\";\r\n//     return undefined\r\n// }\r\n// или использовать замыкание что если нам надо не 30 а 50\r\nexport const maxlengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n\r\n    if (value.length > maxLength) return `max length is  ${maxLength}} symbols`;\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormCssControls_formControl__1PxoF\",\"error\":\"FormCssControls_error__1_CxU\",\"s\":\"FormCssControls_s__3RZnQ\",\"formSummaryError\":\"FormCssControls_formSummaryError__LsVJW\"};"," \r\n export const   updateObjectInArray=(items,itemId,odjPropName,newodjectProps)=>{\r\n     \r\n    return items.map(  u =>{\r\n    if(u[odjPropName]===itemId){\r\n    return{ ...u, ...newodjectProps}\r\n    }\r\n    return u;\r\n    } )}","import { AppStateType } from './Redux-Store';\r\nimport { userType } from './../Types/Types';\r\n/* eslint eqeqeq: 0 */\r\nimport { userAPI } from \"../API/api\";\r\n\r\nimport { updateObjectInArray } from \"./utils/object-helpers\";\r\nimport { Dispatch } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\n\r\n\r\nconst FULLOW = 'FULLOW';\r\nconst UNFULLOW = 'UNFULLOW';\r\nconst SET_USERS_AC = 'SET_USERS_AC';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FRTCHING = 'TOGGLE_IS_FRTCHING';\r\nconst TOGGLE_IS_FOLLOW_PROGRESS = 'TOGGLE_IS_FOLLOW_PROGRESS';\r\n\r\n\r\n\r\nlet f = {\r\n    users: [] as Array<userType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 4,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number> //arrey of users ids\r\n}\r\n\r\ntype InitialState = typeof f\r\n\r\n\r\nconst UsersPageReducer = (state = f, active: ActionTypes): InitialState => {\r\n\r\n\r\n    switch (active.type) {\r\n\r\n        case FULLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, active.text, \"id\", { followed: true })\r\n            }\r\n\r\n        case UNFULLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, active.text, \"id\", { followed: false })\r\n            }\r\n\r\n        case SET_USERS_AC:\r\n            return {\r\n                ...state, users: active.text\r\n            }\r\n\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: active.text\r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: active.text\r\n            }\r\n        case TOGGLE_IS_FRTCHING:\r\n            return {\r\n                ...state, isFetching: active.text\r\n            }\r\n        case TOGGLE_IS_FOLLOW_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: active.text\r\n                    ? [...state.followingInProgress, active.userid]\r\n                    : state.followingInProgress.filter(id => id != active.userid)\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = fullowSuccessType | unfullowSuccessType | setUsersType\r\n    | setcurrentPageType | settotalUsersCountType | setFetchingType | setFollowProgressType;\r\n\r\ntype fullowSuccessType = {\r\n    type: typeof FULLOW\r\n    text: number\r\n}\r\nexport const fullowSuccess = (UserID: number): fullowSuccessType => {\r\n    return {\r\n        type: FULLOW,\r\n        text: UserID\r\n    }\r\n};\r\ntype unfullowSuccessType = {\r\n    type: typeof UNFULLOW\r\n    text: number\r\n}\r\nexport const unfullowSuccess = (UserID: number): unfullowSuccessType => {\r\n    return {\r\n        type: UNFULLOW,\r\n        text: UserID\r\n    }\r\n};\r\ntype setUsersType = {\r\n    type: typeof SET_USERS_AC\r\n    text: Array<userType>\r\n}\r\nexport const setUsers = (User: Array<userType>): setUsersType => {\r\n    return {\r\n        type: SET_USERS_AC,\r\n        text: User\r\n    }\r\n};\r\ntype setcurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    text: number\r\n}\r\nexport const setcurrentPage = (curentPage: number): setcurrentPageType => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        text: curentPage\r\n    }\r\n};\r\ntype settotalUsersCountType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    text: number\r\n}\r\nexport const settotalUsersCount = (totalusersCount: number): settotalUsersCountType => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        text: totalusersCount\r\n    }\r\n};\r\ntype setFetchingType = {\r\n    type: typeof TOGGLE_IS_FRTCHING\r\n    text: boolean\r\n}\r\nexport const setFetching = (FRTCHING: boolean): setFetchingType => {\r\n    return {\r\n        type: TOGGLE_IS_FRTCHING,\r\n        text: FRTCHING\r\n    }\r\n};\r\ntype setFollowProgressType = {\r\n    type: typeof TOGGLE_IS_FOLLOW_PROGRESS\r\n    text: boolean\r\n    userid: number\r\n}\r\nexport const setFollowProgress = (Follow: boolean, id: number): setFollowProgressType => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOW_PROGRESS,\r\n        text: Follow,\r\n        userid: id\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionTypes>;\r\n\r\nconst followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMetod: any, actionCreator: (userId: number) => unfullowSuccessType | fullowSuccessType) => {\r\n    dispatch(setFollowProgress(true, userId));\r\n    let Response = await apiMetod(userId)\r\n\r\n    if (Response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(setFollowProgress(false, userId));\r\n\r\n}\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return async (dispatch: DispatchType, getState: GetStateType) => {\r\n        dispatch(setFetching(true));\r\n        dispatch(setcurrentPage(currentPage));\r\n        let data = await userAPI.getUsers(currentPage, pageSize)\r\n        dispatch(setFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(settotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.follow.bind(userAPI), fullowSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, userAPI.unfollow.bind(userAPI), unfullowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default UsersPageReducer;\r\n","export default __webpack_public_path__ + \"static/media/loading.2cfb1e57.svg\";","import loading from '../../../assets/loading.svg';\r\nimport React from 'react';\r\n\r\n\r\nlet Preloader=(props)=>{\r\nreturn <div style={{backgroundColor:'white'}}>\r\n            <img alt={\"IMG\"} src={loading} />\r\n         </div>\r\n}\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"paginator_pageNumber__t_rGR\",\"selectedPage\":\"paginator_selectedPage__-X9vt\",\"paginator\":\"paginator_paginator__UHujt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"headerCSS_logo__3MZVW\",\"logiBloc\":\"headerCSS_logiBloc__3dtH8\"};"],"sourceRoot":""}