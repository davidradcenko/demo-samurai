{"version":3,"sources":["MyHTML/content_profil/message/message.jsx","MyHTML/content_profil/ProfilStatus/ProfileStatusHook.js","MyHTML/content_profil/profil_users/ProfileDataForm.jsx","MyHTML/content_profil/profil_users/Prafil_users.jsx","MyHTML/content_profil/content_profil.jsx","MyHTML/content_profil/content_profil_Conteiner.js"],"names":["Message","Props","className","src","alt","text","ProfileStatusHook","props","useState","editMode","setEditMade","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","onSubmit","style","formSummaryError","createField","TextInputComponent","type","TextAreaComponent","Object","keys","vk","map","key","ProfileData","isOwner","gotoEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","Profil_users","setEditMode","t","FotoUser","initialValues","formData","saveProfile","then","target","files","length","saveFoto","Profil","React","memo","state","profil","oldMass","message","mess","id","newmass","photos","small","facebook","contacts","website","Preloader","MyPostsProfileFormRedux","values","newPost","ProfileTextarea","maxlenth15","maxlengthCreator","Field","name","component","placeholder","validate","requiredField","ProfileContainer","userId","this","match","params","history","push","setFetching","getUserProfile","getStatus","refrechProfile","prevProps","prevState","snapshot","isFetching","Component","compose","connect","profilPage","usersPage","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.fd662b10.chunk.js","sourcesContent":["const Message=(Props)=>{\r\nreturn( <div className=\"mess\">\r\n<img src=\"http://wap.photohost.ru/pictures/745260.jpg\" alt=\"img\"/>\r\n<p>{Props.text}</p>\r\n</div> )\r\n}\r\nexport default Message;","import React, { useEffect, useState } from 'react';\r\nimport '../content_profil.css'\r\n\r\nconst ProfileStatusHook =(props)=>{\r\n\r\n\r\n\r\nlet [editMode,setEditMade]=useState(false);\r\nlet [status,setStatus]=useState(props.status);\r\n\r\nuseEffect(()=>{\r\n    setStatus(props.status)\r\n},[props.status]); \r\n\r\nconst onStatusChange=(e)=>{\r\nsetStatus(e.currentTarget.value)\r\n}\r\n\r\nconst activateMode=()=>{\r\nsetEditMade(true)\r\n}\r\nconst deactivateEditMode=()=>{\r\n    setEditMade(false);\r\n    props.updateStatus(status);\r\n}   \r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    \r\n                        <span onDoubleClick={activateMode} >{props.status || '------'}</span>\r\n                   \r\n                }\r\n                {editMode &&\r\n                   \r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}  />\r\n                   \r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default ProfileStatusHook;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxlengthCreator, requiredField } from '../../../Redux/utils/valedators/valedators';\r\nimport { createField, TextAreaComponent, TextInputComponent } from '../../common/FormsControls/FormsControls';\r\nimport ProfileStatusHook from '../ProfilStatus/ProfileStatusHook';\r\nimport style from \"../../common/FormsControls/FormCssControls.module.css\";\r\nconst ProfileDataForm = ({ handleSubmit, props, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>{error}</div>}\r\n        <div><button>Save</button></div>\r\n        <div>\r\n            <b>Full name</b>:  {createField(\"Full name\", \"fullName\", [], TextInputComponent)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:{createField(\"\", \"lookingForAJob\", [], TextInputComponent, { type: \"checkbox\" })}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:{createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextAreaComponent)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:{createField(\"About me\", \"aboutMe\", [], TextAreaComponent)}\r\n        </div>\r\n        <div>\r\n            <b>Status</b>:<ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n        <div>\r\n\r\n            <b>Contacts</b>:{Object.keys(props.vk).map(key => {\r\n                return <div key={key}>\r\n                    <b>{key}: {createField(key, \"contacts.\" + key, [], TextInputComponent)}</b>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import { useState } from 'react';\r\nimport FotoUser from '../../../assets/images/FotoUsersNotFuond.jpg';\r\nimport ProfileStatusHook from '../ProfilStatus/ProfileStatusHook';\r\nimport ProfileDataFormReduxForm from './ProfileDataForm';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nconst Profil_users = (props) => {\r\n    debugger;\r\n    let [editMode, setEditMode] = useState(false);\r\n    const onMainFotoSelection = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveFoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"info_user\">\r\n            <img src={props.t || FotoUser} alt=\"foto\" />\r\n            <div className=\"text_info_user\">\r\n                <h1 className=\"title\">{props.fullName}</h1>\r\n                <p className=\"subtitle\"> О себе:{props.aboutMe}</p>\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={props} props={props} onSubmit={onSubmit} />\r\n                    : <ProfileData props={props} isOwner={props.isOwner} gotoEditMode={() => { setEditMode(true) }} />}\r\n\r\n\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainFotoSelection} />}\r\n\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nconst ProfileData = ({ props, isOwner, gotoEditMode }) => {\r\n    debugger;\r\n    return <div>\r\n        {isOwner && <div><button onClick={gotoEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>:{props.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:{props.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.lookingForAJob &&\r\n            <div> <b>My professional skills</b>:{props.lookingForAJobDescription}</div>\r\n        }\r\n        <div>\r\n            <b>About me</b>:{props.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Status</b>:<ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n        <div>\r\n\r\n            <b>Contacts</b>:{Object.keys(props.vk).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={props.vk[key]} />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className=\"contact\"><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\nexport default Profil_users;","import React from 'react';\r\n\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { maxlengthCreator, requiredField } from '../../Redux/utils/valedators/valedators.ts';\r\nimport { TextAreaComponent } from '../common/FormsControls/FormsControls.tsx';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\n\r\n\r\nimport './content_profil.css'\r\nimport Message from './message/message'\r\nimport ProfileStatusHook from './ProfilStatus/ProfileStatusHook.js';\r\n\r\nimport ProfileUsers from './profil_users/Prafil_users'\r\n\r\n\r\n\r\nconst Profil = React.memo(props => {\r\n    let state = props.state;\r\n\r\n    if (!props.profil) {\r\n        <Preloader />\r\n    } else {\r\n        var oldMass = state.message.map(mess => <Message key={mess.id} text={mess.text} />);\r\n        var newmass = <ProfileUsers\r\n            lookingForAJob={state.profil.lookingForAJob}\r\n            lookingForAJobDescription={state.profil.lookingForAJobDescription}\r\n            status={props.status}\r\n            saveProfile={props.saveProfile}\r\n            updateStatus={props.updateStatus}\r\n            isOwner={props.isOwner}\r\n            saveFoto={props.saveFoto}\r\n            fullName={state.profil.fullName}\r\n            t={state.profil.photos.small}\r\n            aboutMe={state.profil.aboutMe}\r\n            facebook={state.profil.contacts}\r\n            vk={state.profil.contacts} website={state.profil.contacts}\r\n\r\n        />\r\n    }\r\n    let addNewMessPostsProfile = (values) => {\r\n\r\n        props.newPost(values.ProfileTextarea);\r\n    }\r\n\r\n    return (\r\n        <div className=\"content_profil\">\r\n\r\n            {/* <div className=\"profil_img\"></div> */}\r\n            {newmass}\r\n            <div className=\"posts\">\r\n                <h1>My posts</h1>\r\n\r\n            </div>\r\n            <div className=\"message\">\r\n                <MyPostsProfileFormRedux onSubmit={addNewMessPostsProfile} />\r\n                {oldMass}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n})\r\nconst maxlenth15 = maxlengthCreator(15);\r\nconst AddMessageProfilePost = (props) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field name=\"ProfileTextarea\" component={TextAreaComponent} placeholder=\"Enter your post\" validate={[requiredField, maxlenth15]} />\r\n                {/* <textarea onChange={OnChengeFun} value={state.newPostText} ref={s}></textarea> */}\r\n                <button>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst MyPostsProfileFormRedux = reduxForm({ form: \"MypostsProfile\" })(AddMessageProfilePost);\r\nexport default Profil;","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\n\r\n\r\nimport { newPost,getUserProfile,getStatus,updateStatus, saveFoto,saveProfile } from '../../Redux/ProfilPageReducer.ts';\r\nimport {  setFetching } from '../../Redux/UsersPageReducer';\r\nimport Preloader from '../common/Preloader/Preloader.js';\r\nimport Profil from './content_profil.jsx';\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n  refrechProfile(){\r\nlet userId=this.props.match.params.userId;\r\n        if(!userId){\r\n         userId=this.props.userId ;\r\n         if(!userId){\r\n             this.props.history.push(\"/login\");\r\n         }\r\n        } \r\n         this.props.setFetching(true);\r\n        this.props.getUserProfile(userId);\r\n         this.props.setFetching(false);\r\n\r\n this.props.getStatus(userId);\r\n  }\r\n\r\n    componentDidMount() {\r\n        this.refrechProfile();\r\n    }\r\n\r\n\r\ncomponentDidUpdate(prevProps,prevState,snapshot){\r\n    if(this.props.match.params.userId != prevProps.match.params.userId){\r\n    this.refrechProfile();\r\n}\r\n}\r\n\r\nrender(){\r\n    \r\n    return  <> {this.props.isFetching ?<Preloader/>:null}\r\n        <Profil  saveFoto={this.props.saveFoto} \r\n         state={this.props.state} \r\n         isOwner={!this.props.match.params.userId}\r\n        newPost={this.props.newPost} \r\n        profil={this.props.profil}\r\n         status={this.props.status} \r\n         updateStatus={this.props.updateStatus}\r\n         saveProfile={this.props.saveProfile}/>\r\n    )\r\n    </>\r\n}\r\n}\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        state:state.profilPage,\r\n        profil:state.profilPage.profil,\r\n        isFetching:state.usersPage.isFetching,\r\n        status:state.profilPage.status,\r\n        userId:state.auth.userId,\r\n       isAuth:state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\n// let AuthRedirectComponent=WithAuthRedirect(ProfileContainer);\r\n// let WithUrlDataConteinerComponent=withRouter(AuthRedirectComponent);\r\n// const SuperContent_profil_Conteiner= connect(mapStateToProps,{setFetching,getUserProfile,updateNewPostText,newPost})(WithUrlDataConteinerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{saveFoto,setFetching,getUserProfile,newPost,getStatus,updateStatus,saveProfile}),\r\n    withRouter,\r\n    // WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}